//
// Created by milinda on 10/13/17.
/**
*@author Milinda Fernando
*School of Computing, University of Utah
*@brief computes the interpolation difference (wavelet coefficiencts) for a given unzipped variable.
*This computation then used for check trigger re-meshing.
*/
//

#ifndef SFCSORTBENCH_WAVELET_H
#define SFCSORTBENCH_WAVELET_H

#include "refel.h"

/**@brief : Reference element for order 3*/
static const RefElement RE_OR3 = RefElement(1,3);

/**@brief : Reference element for order 4*/
static const RefElement RE_OR4 = RefElement(1,4);

/**@brief : Reference element for order 7*/
static const RefElement RE_OR7 = RefElement(1,7);

/**@brief : Reference element for order 8*/
static const RefElement RE_OR8 = RefElement(1,8);


#define REFINE_INDEX_OFFSET 2
#define REFINE_END_OFFSET 9
#define NUM_REFINE_WAVELET_COEF 8
#define NUM_REFINE_INPUT_PTS 125

#define COARSE_INDEX_OFFSET 4
#define COARSE_END_OFFSET 13
#define NUM_COARSE_WAVELET_COEF 27
#define NUM_COARSE_INPUT_PTS 64

const double BH_EH_THRESHOLD_REFINE = 0.3;
const double BH_EH_THRESHOLD_COARSEN = 0.4;

// Below matrices are generated from HOMG (for uniform points.) matlab code. Don't change those unless you know exactly what you are doing.



static const double IW_5_2_REFINE[NUM_REFINE_WAVELET_COEF][NUM_REFINE_INPUT_PTS] = {
        { -0.0000596046 ,0.0007152557 ,0.0010728836 ,-0.0002384186 ,0.0000357628 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,-0.0085830688 ,0.1029968262 ,0.1544952393 ,-0.0343322754 ,0.0051498413 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,-0.0193119049 ,0.2317428589 ,0.3476142883 ,-0.0772476196 ,0.0115871429 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,-0.0009536743 ,0.0114440918 ,0.0171661377 ,-0.0038146973 ,0.0005722046 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,-0.0000214577 ,0.0002574921 ,0.0003862381 ,-0.0000858307 ,0.0000128746 },
        { 0.0000357628 ,-0.0002384186 ,0.0010728836 ,0.0007152557 ,-0.0000596046 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,-0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,0.0051498413 ,-0.0343322754 ,0.1544952393 ,0.1029968262 ,-0.0085830688 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,0.0115871429 ,-0.0772476196 ,0.3476142883 ,0.2317428589 ,-0.0193119049 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,0.0005722046 ,-0.0038146973 ,0.0171661377 ,0.0114440918 ,-0.0009536743 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,-0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,0.0000128746 ,-0.0000858307 ,0.0003862381 ,0.0002574921 ,-0.0000214577 },
        { 0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,-0.0000596046 ,0.0007152557 ,0.0010728836 ,-0.0002384186 ,0.0000357628 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,-0.0085830688 ,0.1029968262 ,0.1544952393 ,-0.0343322754 ,0.0051498413 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,-0.0193119049 ,0.2317428589 ,0.3476142883 ,-0.0772476196 ,0.0115871429 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,-0.0009536743 ,0.0114440918 ,0.0171661377 ,-0.0038146973 ,0.0005722046 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,-0.0000214577 ,0.0002574921 ,0.0003862381 ,-0.0000858307 ,0.0000128746 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 },
        { -0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,0.0000357628 ,-0.0002384186 ,0.0010728836 ,0.0007152557 ,-0.0000596046 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,0.0051498413 ,-0.0343322754 ,0.1544952393 ,0.1029968262 ,-0.0085830688 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,0.0115871429 ,-0.0772476196 ,0.3476142883 ,0.2317428589 ,-0.0193119049 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,0.0005722046 ,-0.0038146973 ,0.0171661377 ,0.0114440918 ,-0.0009536743 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,0.0000128746 ,-0.0000858307 ,0.0003862381 ,0.0002574921 ,-0.0000214577 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,-0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 },
        { 0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,-0.0000214577 ,0.0002574921 ,0.0003862381 ,-0.0000858307 ,0.0000128746 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,-0.0009536743 ,0.0114440918 ,0.0171661377 ,-0.0038146973 ,0.0005722046 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,-0.0193119049 ,0.2317428589 ,0.3476142883 ,-0.0772476196 ,0.0115871429 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,-0.0085830688 ,0.1029968262 ,0.1544952393 ,-0.0343322754 ,0.0051498413 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,-0.0000596046 ,0.0007152557 ,0.0010728836 ,-0.0002384186 ,0.0000357628 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 },
        { -0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,0.0000128746 ,-0.0000858307 ,0.0003862381 ,0.0002574921 ,-0.0000214577 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,0.0005722046 ,-0.0038146973 ,0.0171661377 ,0.0114440918 ,-0.0009536743 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,0.0115871429 ,-0.0772476196 ,0.3476142883 ,0.2317428589 ,-0.0193119049 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,0.0051498413 ,-0.0343322754 ,0.1544952393 ,0.1029968262 ,-0.0085830688 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,0.0000357628 ,-0.0002384186 ,0.0010728836 ,0.0007152557 ,-0.0000596046 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,-0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 },
        { -0.0000214577 ,0.0002574921 ,0.0003862381 ,-0.0000858307 ,0.0000128746 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,-0.0009536743 ,0.0114440918 ,0.0171661377 ,-0.0038146973 ,0.0005722046 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,-0.0193119049 ,0.2317428589 ,0.3476142883 ,-0.0772476196 ,0.0115871429 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,-0.0085830688 ,0.1029968262 ,0.1544952393 ,-0.0343322754 ,0.0051498413 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,-0.0000596046 ,0.0007152557 ,0.0010728836 ,-0.0002384186 ,0.0000357628 },
        { 0.0000128746 ,-0.0000858307 ,0.0003862381 ,0.0002574921 ,-0.0000214577 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,-0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,0.0005722046 ,-0.0038146973 ,0.0171661377 ,0.0114440918 ,-0.0009536743 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,0.0115871429 ,-0.0772476196 ,0.3476142883 ,0.2317428589 ,-0.0193119049 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,0.0051498413 ,-0.0343322754 ,0.1544952393 ,0.1029968262 ,-0.0085830688 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,-0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,0.0000357628 ,-0.0002384186 ,0.0010728836 ,0.0007152557 ,-0.0000596046 },
};


static const double IW_4_3_COARSEN [NUM_COARSE_WAVELET_COEF][NUM_COARSE_INPUT_PTS] = {
        { 0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,0.2746582031 ,0.8239746094 ,-0.2746582031 ,0.0549316406 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 },
        { -0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,-0.0549316406 ,0.4943847656 ,0.4943847656 ,-0.0549316406 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 },
        { 0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,0.0549316406 ,-0.2746582031 ,0.8239746094 ,0.2746582031 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 },
        { -0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,-0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 },
        { 0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 },
        { -0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,-0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 },
        { 0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,0.2746582031 ,0.8239746094 ,-0.2746582031 ,0.0549316406 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 },
        { -0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,-0.0549316406 ,0.4943847656 ,0.4943847656 ,-0.0549316406 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,-0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 },
        { 0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,0.0549316406 ,-0.2746582031 ,0.8239746094 ,0.2746582031 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 },
        { -0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 },
        { 0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 },
        { -0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 },
        { 0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,0.0988769531 ,0.2966308594 ,-0.0988769531 ,0.0197753906 ,0.0988769531 ,0.2966308594 ,-0.0988769531 ,0.0197753906 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,0.0988769531 ,0.2966308594 ,-0.0988769531 ,0.0197753906 ,0.0988769531 ,0.2966308594 ,-0.0988769531 ,0.0197753906 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 },
        { -0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,-0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,-0.0197753906 ,0.1779785156 ,0.1779785156 ,-0.0197753906 ,-0.0197753906 ,0.1779785156 ,0.1779785156 ,-0.0197753906 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,-0.0197753906 ,0.1779785156 ,0.1779785156 ,-0.0197753906 ,-0.0197753906 ,0.1779785156 ,0.1779785156 ,-0.0197753906 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,-0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,-0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 },
        { 0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,0.0197753906 ,-0.0988769531 ,0.2966308594 ,0.0988769531 ,0.0197753906 ,-0.0988769531 ,0.2966308594 ,0.0988769531 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,0.0197753906 ,-0.0988769531 ,0.2966308594 ,0.0988769531 ,0.0197753906 ,-0.0988769531 ,0.2966308594 ,0.0988769531 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 },
        { -0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,-0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 },
        { 0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 },
        { -0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,-0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 },
        { 0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,0.2746582031 ,0.8239746094 ,-0.2746582031 ,0.0549316406 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 },
        { -0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,-0.0549316406 ,0.4943847656 ,0.4943847656 ,-0.0549316406 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 },
        { 0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,0.0549316406 ,-0.2746582031 ,0.8239746094 ,0.2746582031 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 },
        { -0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,-0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 },
        { 0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 },
        { -0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,-0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 },
        { 0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,0.2746582031 ,0.8239746094 ,-0.2746582031 ,0.0549316406 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 },
        { -0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,-0.0549316406 ,0.4943847656 ,0.4943847656 ,-0.0549316406 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 },
        { 0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,0.0549316406 ,-0.2746582031 ,0.8239746094 ,0.2746582031 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 },
};

/**
 * @brief: Computes the wavelet coefficients, for the unzipped version of the block.
 * (this only works for the 4th order elements.  )
 * @param[in] unzippedVec: unzipped vector
 * @param[in] offset: offset of the block.
 * @param[in] M: interpolation matrix.
 * @param[in] mSz: interpolation matrix dimensions
 * @param[in] eI: element i,j,k values
 * @param[out] wavelets: wavelet coefficents
 * */

template <typename T>
void computeRefineWavelets(const T* unzippedVec, const unsigned int offset,const unsigned int eleOrder,const unsigned int *eI,const unsigned int pWidth,const unsigned int *sz, T* wavelets);


/**
 * @brief: Computes the wavelet coefficients (for coarsening), for the unzipped version of the block.
 * (this only works for the 4th order elements
 *  this only works for the internal blocks. Not compatible with boundary blocks.
 *  this only works for blocks at least have 8 elements (in 3D)
 *  eI should be the lowest of 8 children)
 * @param[in] unzippedVec: unzipped vector
 * @param[in] offset: offset of the block.
 * @param[in] M: interpolation matrix.
 * @param[in] mSz: interpolation matrix dimensions
 * @param[in] eI: element i,j,k values
 * @param[out] wavelets: wavelet coefficents
 * */

template <typename T>
void computeCoarsenWavelets(const T* unzippedVec, const unsigned int offset,const unsigned int eleOrder,const unsigned int *eI,const unsigned int pWidth,const unsigned int *sz, T* wavelets);



template <typename T>
void computeRefineWavelets(const T* unzippedVec, const unsigned int offset,const unsigned int eleOrder,const unsigned int *eI,const unsigned int pWidth,const unsigned int *sz, T* wavelets)
{

    //pad---|element----|--pad
    //*--*--*--*--*--*--*--*--*
    //1--2--3--4--5--6--7--8--9

    // below should be the REFINE_INDEX_OFFSET.
    const unsigned int ib=(eI[0]*eleOrder+pWidth-REFINE_INDEX_OFFSET);
    const unsigned int ie=ib+REFINE_END_OFFSET;

    const unsigned int jb=(eI[1]*eleOrder+pWidth-REFINE_INDEX_OFFSET);
    const unsigned int je=jb+REFINE_END_OFFSET;

    const unsigned int kb=(eI[2]*eleOrder+pWidth-REFINE_INDEX_OFFSET);
    const unsigned int ke=kb+REFINE_END_OFFSET;

    for(unsigned int wIndex=0;wIndex<NUM_REFINE_WAVELET_COEF;wIndex++)
        wavelets[wIndex]=0.0;


    unsigned int m=0;

    for(unsigned int wIndex=0;wIndex<NUM_REFINE_WAVELET_COEF;wIndex++,m=0)
        for(unsigned int k=kb;k<ke;k+=REFINE_INDEX_OFFSET)
            for(unsigned int j=jb;j<je;j+=REFINE_INDEX_OFFSET)
                for(unsigned int i=ib;i<ie;i+=REFINE_INDEX_OFFSET,m++)
                {
                    //if(std::isnan(unzippedVec[offset+k*sz[1]*sz[0]+j*sz[0]+i]) || std::isnan(IW_5_2_REFINE[wIndex][m]) ) std::cout<<"unzipVec:  "<<unzippedVec[offset+k*sz[1]*sz[0]+j*sz[0]+i]<<"IW_5_2_REFINE[wIndex][m]: "<<IW_5_2_REFINE[wIndex][m]<<" i: j: k: "<<i<<" , "<<j<<"k : "<<k<<std::endl;
                    wavelets[wIndex]+=(IW_5_2_REFINE[wIndex][m]*unzippedVec[offset+k*sz[1]*sz[0]+j*sz[0]+i]);
                }



    wavelets[0]=fabs(wavelets[0]-unzippedVec[offset+(kb+3)*sz[1]*sz[0]+(jb+3)*sz[0]+(ib+3)]);
    wavelets[1]=fabs(wavelets[1]-unzippedVec[offset+(kb+3)*sz[1]*sz[0]+(jb+3)*sz[0]+(ib+5)]);

    wavelets[2]=fabs(wavelets[2]-unzippedVec[offset+(kb+3)*sz[1]*sz[0]+(jb+5)*sz[0]+(ib+3)]);
    wavelets[3]=fabs(wavelets[3]-unzippedVec[offset+(kb+3)*sz[1]*sz[0]+(jb+5)*sz[0]+(ib+5)]);

    wavelets[4]=fabs(wavelets[4]-unzippedVec[offset+(kb+5)*sz[1]*sz[0]+(jb+3)*sz[0]+(ib+3)]);
    wavelets[5]=fabs(wavelets[5]-unzippedVec[offset+(kb+5)*sz[1]*sz[0]+(jb+3)*sz[0]+(ib+5)]);

    wavelets[6]=fabs(wavelets[6]-unzippedVec[offset+(kb+5)*sz[1]*sz[0]+(jb+5)*sz[0]+(ib+3)]);
    wavelets[7]=fabs(wavelets[7]-unzippedVec[offset+(kb+5)*sz[1]*sz[0]+(jb+5)*sz[0]+(ib+5)]);




}


template <typename T>
void computeCoarsenWavelets(const T* unzippedVec, const unsigned int offset,const unsigned int eleOrder,const unsigned int *eI,const unsigned int pWidth,const unsigned int *sz, T* wavelets)
{

    //pad---|element1---|--element2-|pad---|
    //*--*--*--*--*--*--*--*--*--*--*--*--*
    //1--2--3--4--5--6--7--8--9--10-11-12-13

    const unsigned int ib=(eI[0]*eleOrder+pWidth-REFINE_INDEX_OFFSET);
    const unsigned int ie=ib+COARSE_END_OFFSET;

    const unsigned int jb=(eI[1]*eleOrder+pWidth-REFINE_INDEX_OFFSET);
    const unsigned int je=jb+COARSE_END_OFFSET;

    const unsigned int kb=(eI[2]*eleOrder+pWidth-REFINE_INDEX_OFFSET);
    const unsigned int ke=kb+COARSE_END_OFFSET;

    for(unsigned int wIndex=0;wIndex<NUM_COARSE_WAVELET_COEF;wIndex++)
        wavelets[wIndex]=0.0;


    unsigned int m=0;

    for(unsigned int wIndex=0;wIndex<NUM_COARSE_WAVELET_COEF;wIndex++,m=0)
        for(unsigned int k=kb;k<ke;k+=COARSE_INDEX_OFFSET)
            for(unsigned int j=jb;j<je;j+=COARSE_INDEX_OFFSET)
                for(unsigned int i=ib;i<ie;i+=COARSE_INDEX_OFFSET,m++)
                    wavelets[wIndex]+=(IW_4_3_COARSEN[wIndex][m]*unzippedVec[offset+k*sz[1]*sz[0]+j*sz[0]+i]);



    m=0;
    for(unsigned int k=(kb+REFINE_INDEX_OFFSET);k<ke;k+=COARSE_INDEX_OFFSET)
        for(unsigned int j=(jb+REFINE_INDEX_OFFSET);j<je;j+=COARSE_INDEX_OFFSET)
            for(unsigned int i=(ib+REFINE_INDEX_OFFSET);i<ie;i+=COARSE_INDEX_OFFSET,m++)
                wavelets[m]=fabs(wavelets[m]-unzippedVec[offset+k*sz[1]*sz[0]+j*sz[0]+i]);




}





/**
 * @brief generic function to compute wavelets for multiple element orders. 
 * @tparam T type of the vector
 * @param unzippedVec : unzip vector
 * @param eleOrder : order of the intepolation to the wavelets
 * @param eI : element index
 * @param pWidth : padding width
 * @param sz : size of the 
 * @param wavelets : wavelet coefficients. 
 * @param szn : number of coefficients. 
 * @param ws: allocated work spaces for wavelet compute interpoation in and out. 
 */
template<typename T>
void refine_wavelets(const T* unzippedVec, const unsigned int eleOrder,const unsigned int *eI, const unsigned int pWidth, const unsigned int *sz , T* wavelets,unsigned int szn, T** ws)
{

    for(unsigned int w=0;w<szn;w++)
        wavelets[w]=0.0;

    if(eleOrder == 4)
    {

        // 0, 1, ------------------8,9 - 10

        const unsigned int ib=1;
        const unsigned int ie = 10;

        const unsigned int jb=1;
        const unsigned int je = 10;

        const unsigned int kb=1;
        const unsigned int ke = 10;

        T* wIn = ws[0];
        T* wOut = ws[1];

        unsigned int m=0;

        for(unsigned int k=kb; k < ke; k+=2)
         for(unsigned int j=jb; j < je; j+=2)
          for(unsigned int i=ib; i < ie; i+=2,m++)
            wIn[m] = unzippedVec[(eI[2]*eleOrder + k)*sz[0]*sz[1] + (eI[1]*eleOrder + j)*sz[0]  + (eI[0]*eleOrder + i) ];
        
        const unsigned int n[3]={5,5,5};

        const unsigned int wn[3] = {4,4,4};
        
        const unsigned int c0[2]={1,3};
        const unsigned int c1[2]={1,3};

        const unsigned int uc0[2]={2,4};
        const unsigned int uc1[2]={6,8};

        const unsigned int wc0[2]={0,1};
        const unsigned int wc1[2]={2,3};

        assert( (wn[0]*wn[1]*wn[2])  == (szn) );

        RE_OR4.I3D_Parent2Child(wIn, wOut, 0);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c0[j])*n[0] + (c0[i])]);
        
        RE_OR4.I3D_Parent2Child(wIn, wOut, 1);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c0[j])*n[0] + (c1[i])]);
        

        RE_OR4.I3D_Parent2Child(wIn, wOut, 2);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c1[j])*n[0] + (c0[i])]);


        RE_OR4.I3D_Parent2Child(wIn, wOut, 3);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c1[j])*n[0] + (c1[i])]);



        RE_OR4.I3D_Parent2Child(wIn, wOut, 4);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c0[j])*n[0] + (c0[i])]);
        
        RE_OR4.I3D_Parent2Child(wIn, wOut, 5);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c0[j])*n[0] + (c1[i])]);
        

        RE_OR4.I3D_Parent2Child(wIn, wOut, 6);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c1[j])*n[0] + (c0[i])]);


        RE_OR4.I3D_Parent2Child(wIn, wOut, 7);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c1[j])*n[0] + (c1[i])]);
        
        
        for(unsigned int k=0; k<4; k+=1)
          for(unsigned int j=0; j<4; j+=1)
           for(unsigned int i=0; i<4; i+=1)
           {
             if(i==0 || i==3 || j==0 || j==3 || k==0 || k==3)
              wavelets[k*wn[1]*wn[0] + j*wn[0] + i ] =0.0;
           }
            




    }else if(eleOrder == 8)
    {

        const unsigned int ib=pWidth;
        const unsigned int ie = 15-pWidth;

        const unsigned int jb=pWidth;
        const unsigned int je = 15-pWidth;

        const unsigned int kb=pWidth;
        const unsigned int ke = 15-pWidth;

        
        // 7th order interpolation
        T* wIn = ws[0];
        T* wOut = ws[1];

        unsigned int m=0;

        for(unsigned int k=kb; k < ke; k+=2)
         for(unsigned int j=jb; j < je; j+=2)
          for(unsigned int i=ib; i < ie; i+=2,m++)
            wIn[m] = unzippedVec[(eI[2]*eleOrder + k)*sz[0]*sz[1] + (eI[1]*eleOrder + j)*sz[0]  + (eI[0]*eleOrder + i) ];



        const unsigned int n[3]={5,5,5};
        const unsigned int wn[3] = {2,2,2};

        const unsigned int c0[2]={1,3};
        const unsigned int c1[2]={1,3};
        const unsigned int uc0[2]={4,6};
        const unsigned int uc1[2]={8,10};

        const unsigned int wc0[2]={0,1};
        const unsigned int wc1[2]={2,3};

        assert( (wn[0]*wn[1]*wn[2])  == (szn) );

        RE_OR4.I3D_Parent2Child(wIn, wOut, 0);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c0[j])*n[0] + (c0[i])]);
        
        RE_OR4.I3D_Parent2Child(wIn, wOut, 1);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c0[j])*n[0] + (c1[i])]);
        

        RE_OR4.I3D_Parent2Child(wIn, wOut, 2);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c1[j])*n[0] + (c0[i])]);


        RE_OR4.I3D_Parent2Child(wIn, wOut, 3);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c1[j])*n[0] + (c1[i])]);



        RE_OR4.I3D_Parent2Child(wIn, wOut, 4);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c0[j])*n[0] + (c0[i])]);
        
        RE_OR4.I3D_Parent2Child(wIn, wOut, 5);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c0[j])*n[0] + (c1[i])]);
        

        RE_OR4.I3D_Parent2Child(wIn, wOut, 6);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c1[j])*n[0] + (c0[i])]);


        RE_OR4.I3D_Parent2Child(wIn, wOut, 7);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c1[j])*n[0] + (c1[i])]);

         for(unsigned int k=0; k<4; k+=1)
          for(unsigned int j=0; j<4; j+=1)
           for(unsigned int i=0; i<4; i+=1)
           {
             if(i==0 || i==3 || j==0 || j==3 || k==0 || k==3)
              wavelets[k*wn[1]*wn[0] + j*wn[0] + i ] =0.0;
           }


    }






}


/**
 * @brief generic function to compute wavelets for multiple element orders. (coarsenging version)
 * @tparam T type of the vector
 * @param unzippedVec : unzip vector
 * @param eleOrder : order of the intepolation to the wavelets
 * @param eI : element index
 * @param pWidth : padding width
 * @param sz : size of the 
 * @param wavelets : wavelet coefficients. 
 * @param szn : number of coefficients. 
 * @param ws: allocated work spaces for wavelet compute interpoation in and out. 
 */
template<typename T>
void coarsen_wavelets(const T* unzippedVec, const unsigned int eleOrder,const unsigned int *eI, const unsigned int pWidth, const unsigned int *sz , T* wavelets,unsigned int szn, T** ws)
{
    for(unsigned int w=0;w<szn;w++)
        wavelets[w]=0.0;

    if(eleOrder == 4)
    {
        // note that the ele vec size for the coarsening is 15 = 9 + 3 + 3

        const unsigned int ib=1;
        const unsigned int ie = 15-1;

        const unsigned int jb=1;
        const unsigned int je = 15-1;

        const unsigned int kb=1;
        const unsigned int ke = 15-1;

        T* wIn = ws[0];
        T* wOut = ws[1];

        unsigned int m=0;

        for(unsigned int k=kb; k < ke; k+=4)
         for(unsigned int j=jb; j < je; j+=4)
          for(unsigned int i=ib; i < ie; i+=4,m++)
            wIn[m] = unzippedVec[(eI[2]*eleOrder + k)*sz[0]*sz[1] + (eI[1]*eleOrder + j)*sz[0]  + (eI[0]*eleOrder + i) ];


        const unsigned int wn[3] = {4,4,4};
        const unsigned int n[3]={4,4,4};

        const unsigned int c0[2]={1,3};
        const unsigned int c1[2]={0,2};

        const unsigned int uc0[2]={3,7};
        const unsigned int uc1[2]={7,11};

        const unsigned int wc0[2]={0,1};
        const unsigned int wc1[2]={2,3};

        assert( (wn[0]*wn[1]*wn[2])  == (szn) );

        RE_OR3.I3D_Parent2Child(wIn, wOut, 0);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c0[j])*n[0] + (c0[i])]);
        
        RE_OR3.I3D_Parent2Child(wIn, wOut, 1);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c0[j])*n[0] + (c1[i])]);
        

        RE_OR3.I3D_Parent2Child(wIn, wOut, 2);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c1[j])*n[0] + (c0[i])]);


        RE_OR3.I3D_Parent2Child(wIn, wOut, 3);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c1[j])*n[0] + (c1[i])]);



        RE_OR3.I3D_Parent2Child(wIn, wOut, 4);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c0[j])*n[0] + (c0[i])]);
        
        RE_OR3.I3D_Parent2Child(wIn, wOut, 5);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c0[j])*n[0] + (c1[i])]);
        

        RE_OR3.I3D_Parent2Child(wIn, wOut, 6);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c1[j])*n[0] + (c0[i])]);


        RE_OR3.I3D_Parent2Child(wIn, wOut, 7);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c1[j])*n[0] + (c1[i])]);




    }else if(eleOrder == 8)
    {
        // note that the ele vec size for the coarsening is 23 = 17 + 3 + 3
        const unsigned int ib=pWidth;
        const unsigned int ie = 23-pWidth;

        const unsigned int jb=pWidth;
        const unsigned int je = 23-pWidth;

        const unsigned int kb=pWidth;
        const unsigned int ke = 23-pWidth;

        T* wIn = ws[0];
        T* wOut = ws[1];

        unsigned int m=0;

        for(unsigned int k=kb; k < ke; k+=4)
         for(unsigned int j=jb; j < je; j+=4)
          for(unsigned int i=ib; i < ie; i+=4,m++)
            wIn[m] = unzippedVec[(eI[2]*eleOrder + k)*sz[0]*sz[1] + (eI[1]*eleOrder + j)*sz[0]  + (eI[0]*eleOrder + i) ];

        const unsigned int wn[3] = {4,4,4};
        const unsigned int n[3]={5,5,5};

        const unsigned int c0[2]={1,3};
        const unsigned int c1[2]={1,3};

        const unsigned int uc0[2]={5,9};
        const unsigned int uc1[2]={13,17};

        const unsigned int wc0[2]={0,1};
        const unsigned int wc1[2]={2,3};

        assert( (wn[0]*wn[1]*wn[2])  == (szn) );

        RE_OR4.I3D_Parent2Child(wIn, wOut, 0);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c0[j])*n[0] + (c0[i])]);
        
        RE_OR4.I3D_Parent2Child(wIn, wOut, 1);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c0[j])*n[0] + (c1[i])]);
        

        RE_OR4.I3D_Parent2Child(wIn, wOut, 2);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c1[j])*n[0] + (c0[i])]);


        RE_OR4.I3D_Parent2Child(wIn, wOut, 3);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc0[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc0[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c0[k])*n[1]*n[0] + (c1[j])*n[0] + (c1[i])]);



        RE_OR4.I3D_Parent2Child(wIn, wOut, 4);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c0[j])*n[0] + (c0[i])]);
        
        RE_OR4.I3D_Parent2Child(wIn, wOut, 5);

        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc0[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc0[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c0[j])*n[0] + (c1[i])]);
        

        RE_OR4.I3D_Parent2Child(wIn, wOut, 6);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc0[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc0[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c1[j])*n[0] + (c0[i])]);


        RE_OR4.I3D_Parent2Child(wIn, wOut, 7);
        
        for(unsigned int k=0; k<2; k++)
          for(unsigned int j=0; j<2; j++)
           for(unsigned int i=0; i<2; i++)
            wavelets[wc1[k]*wn[1]*wn[0] + wc1[j]*wn[0] + wc1[i] ] = fabs(unzippedVec[(eI[2]*eleOrder + uc1[k])*sz[0]*sz[1] + (eI[1]*eleOrder + uc1[j])*sz[0]  + (eI[0]*eleOrder + uc1[i]) ]-wOut[(c1[k])*n[1]*n[0] + (c1[j])*n[0] + (c1[i])]);


    }


}





#endif //SFCSORTBENCH_WAVELET_H
